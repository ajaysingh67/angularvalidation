
 <li class="nav-item" routerLinkActive="active">
        <a class="nav-link" routerLink="/dashboard">
            <span class="nav_icons"><i class="fas fa-columns"></i></span><span jhitranslate="">Dashboard</span>
        </a>
 </li>
 

  import { FormsModule, ReactiveFormsModule } from '@angular/forms';

  
  imports: [
      FormsModule,
    ReactiveFormsModule]


 <form [formGroup]="FormModelName" (ngSubmit)="submit(FormModelName)">


 </form>

 <app-validation-message [controlname]="'Two'" [control]="paymentModel.controls.twoFactorCode"></app-validation-message>

  import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';

FormModelName: FormGroup;
  constructor(private fb: FormBuilder, private _router: Router,private route: ActivatedRoute) {
    this.FormModelName = this.fb.group({
      email: new FormControl('', [ValidationmessageserviceService.emailValidator]),
      currencyType: new FormControl('', [Validators.required]),
      code: new FormControl('')
    });

    this.btcTransactionDetailsFormModel.get('txHash').setValidators([Validators.required]);
			    this.btcTransactionDetailsFormModel.get('txHash').updateValueAndValidity();
          

      static ConfirmpasswordValidator(frm: FormGroup) {
        if (!frm.pristine) {
            if (frm.value.length > 0) {
                const parent = frm.parent;
                if (parent.value.newPassword === frm.value) {
                    return null;
                } else {
                    return { passwordnotmatch: true };
                }
            }
        }
    }      

    export class AppSettings {

     public static get login():string{ return `${API_ENDPOINT}login`}
     public static get dashboard():string{ return `${API_ENDPOINT}dashboard`}
     public static get dashboardTransaction():string{ return `${API_ENDPOINT}dashboard/txn`}
    
    }